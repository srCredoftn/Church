var channel;
var audioMapping;
var EPGAudioMapping;

RCS = {
    type: "",
    infoOpened: "",
    infoFromOnAir: false,
    checkAudioPlayed: function(){
        //console.log("checkAudioPlayed");
        RCS_PALINSESTO.viewDummyPlayerMusicEvent();
        var audioPlayed = $(".epg__container .epg__audioContainer > audio.played");
        var type = audioPlayed.attr("data-type");
        if (type!==undefined && type===$(".epg__container li.multitab__link.tabIsSelected").attr("data-type") && audioPlayed.length > 0) {
            var src = audioPlayed.find("> source").attr("src");
            var audioListening = $(".epg__container .teaser__contentWrapper.tabIsSelected coral-icon.listenIcon[data-audio='"+src+"']")
            if (audioListening.length==1) {
                audioListening[0].setAttribute("icon", "pauseCircle");
                $(".epg__container .teaser__contentWrapper.tabIsSelected coral-icon.listenIcon[data-audio='"+src+"']").parent().parent().parent().children("#bars").css("display","block");
            }
        }
    },
    main: function(rcsLang, epgLang){
        //console.log("Rcs Main");
        RCS.activeTab();


        $.ajax({
            type: 'GET',
            url:'/bin/rcs/getchannelaudiomapping.js',
            dataType:'json',
            data:'',
            success: function(data){
                audioMapping = data.mapping;
                if (RCS.typeSelected===undefined || RCS.typeSelected==="") {
                    RCS_ONAIR.main(rcsLang,epgLang,true);
                    RCS.ajaxInterval = setInterval(function () {
                        RCS_ONAIR.main(rcsLang,epgLang)}, RCS.ajaxRefreshTime * 1000);
                    //console.log("after intervall"+rcsLang);
                }
            }
        });

        //because event use epg
        $.ajax({
            type: 'GET',
            url:'/bin/epg/getchannelaudiomapping.js',
            dataType:'json',
            data:'',
            success: function(data){
                EPGAudioMapping = data.mapping;
            }
        });


        $(".epg__container > .multitab__list > ul li.multitab__link").on("click",function(){
            var type = $(this).attr("data-type");
            if ($(".epg__container > .multitab__list").hasClass("isSearching") || RCS.typeSelected===type)
                return;

            RCS.typeSelected=type;
            var hash = window.location.hash;

            if (hash!==type)
                window.location.hash = type;

            clearInterval(RCS.ajaxInterval);
            if (type==="onair") {
                RCS_ONAIR.goToOnAirRow();
                RCS_ONAIR.main(rcsLang,epgLang);
                RCS.ajaxInterval = setInterval(function(){RCS_ONAIR.main(rcsLang,epgLang)},RCS.ajaxRefreshTime*1000);
            }
            else if (type==="events") {
                RCS_ONAIR.goToOnAirRow();
                RCS_SPECIALI.main(rcsLang);
                RCS.ajaxInterval = setInterval(function(){RCS_SPECIALI.main(rcsLang)},RCS.ajaxRefreshTime*1000);
            }
            else if (type==="schedules") {
                RCS_ONAIR.main(rcsLang,epgLang);//scheduler depend of inair info
                RCS.ajaxInterval = setInterval(function(){RCS_ONAIR.main(rcsLang,epgLang)},RCS.ajaxRefreshTime*1000);
                RCS_PALINSESTO.getPalinsesto();
                RCS.ajaxInterval = setInterval(function(){RCS_PALINSESTO.getPalinsesto()},RCS.ajaxRefreshTime*1000);
            }
            else if (type==="replay") {
                RCS_ONAIR.goToOnAirRow();
                RCS_REPLAY.main(rcsLang);
                RCS.ajaxInterval = setInterval(function () {RCS_REPLAY.main(rcsLang);}, RCS.ajaxRefreshTime * 1000);
            }
        });

        $(".epg__container .epg_searchBtn").on("click",function() {
            $(this).toggleClass("closeIcon");
            $(".epgSearch__contentWrapper").toggleClass("visible");
            $(".epg__container > .multitab__list").toggleClass("isSearching");
            if ($(this).hasClass("closeIcon"))
                $(this).html($(this).attr("data-close-label"));
            else
                $(this).html($(this).attr("data-open-label"));
        });

        $("#rcsLanguageSelect").on("change", function(){
            $(this).unbind();
            var path = $(this).val();
            if(path!=undefined && path!=""){
                window.location.href = (window.location.href.replace( window.location.pathname,path+".html"));

            }
        });



        RCS.buttonActive();

        RCS.hashChange(true);
        $(window).on('hashchange', function() {
            RCS.hashChange();
        });
    },

    buttonActive: function(){
        var hash = window.location.hash;
        var hash = hash.substring(hash.indexOf("#")+1);
        if(hash!=""){
            $("li.multitab__botton.itself[data-type='"+hash+"'] a").click();
        }


    },

    hashChange: function(firstTime){
        var currentHash = window.location.hash.substring(1);
        if ((firstTime && currentHash==="onair") || currentHash===RCS.typeSelected)
            return;
        var tabSelected = $(".epg__container > .multitab__list > ul li.multitab__link[data-type='"+currentHash+"']");
        if (tabSelected.length==1)
            tabSelected.click();
    },
    getUrlAudioFromLanguage: function(language){
        if(audioMapping!=undefined){
            for (var i = 0; i < audioMapping.length; i++) {
                if (audioMapping[i].language === language)
                    return audioMapping[i].url;
            }
        }
    },

    getEPGUrlAudioFromLanguage: function(channel){
        //debugger;
        //console.log("getEPGUrlAudioFromLanguage for channel:"+channel);
        if(EPGAudioMapping!=undefined) {
            for (var i = 0; i < EPGAudioMapping.length; i++) {
                if (EPGAudioMapping[i].channel === channel) {
                    return EPGAudioMapping[i].url;
                } else {
                    //console.log("none audio");
                }
            }
        }
    },

    listenBinding: function(audioElement,type){

        audioElement.on("click", function (e) {
            e.preventDefault();
            e.stopPropagation();

            if (this.getAttribute("icon") == "volumeThree") {
                this.setAttribute("icon", "pauseCircle");
                $(this).parent().parent().parent().children("#bars").css("display","block");
                var audioPlayed = $(".epg__container .epg__audioContainer > audio.played");
                if (audioPlayed.length > 0) {
                    var coralIconPlayed = $("coral-icon.listenIcon.coral-Icon--pauseCircle");
                    if (coralIconPlayed.length==1)
                        coralIconPlayed[0].setAttribute("icon", "volumeThree");
                    audioPlayed[0].pause();
                    audioPlayed.removeClass("played");
                    //console.log("pause");
                }
                var radioPlayed = $("#radio-audioPlayer.played");
                if (radioPlayed.length == 1)
                    $("#radio-url").click();

                var audioSrc = $(this).attr("data-audio");
                if ($(".epg__audioContainer > audio > source").attr("src")!==audioSrc){
                    var audioHtml = "<audio preload=\"metadata\">%s</audio>";
                    audioHtml = audioHtml.replace("%s", "<source src='" + audioSrc + "' type='audio/mp3'>");

                    $(".epg__audioContainer").html(audioHtml);
                }

                $(".epg__audioContainer > audio")[0].play();
                $(".epg__audioContainer > audio").addClass("played");
                $(".epg__audioContainer > audio").attr("data-type",type);

                //hidden all bar
                $(".live__bar").css("display", "none");

                var barsId =  $(this).attr("data-bars");
                if(barsId != undefined) {
                    //liveBars
                    $("#"+barsId).css("display", "block");
                }

                if(audioElement.parent().parent().hasClass("dummy view__info")){

                    //clean
                    $(".dummy.view__info .palinsesto_titolo_programma span.title").remove();
                    $(".dummy.view__info .palinsesto_titolo_programma span.artist").remove();

                    var html="";

                    var checkisNotDummy = $("#onair_list .onair__main_info.dummy");

                    if(checkisNotDummy.length==0) {
                        var onAirTitle = RCS_ONAIR.currentOnAirTitle; //$("#onair_list .onair_titolo").html();
                        var onAirArtist = RCS_ONAIR.currentOnAirArtist; //$("#onair_list .onair_artist").html();
                        var onAirType = RCS_ONAIR.currentOnAirType;

                        if (onAirTitle != undefined && onAirTitle != "") {
                            html += "<span class='title'>  " + onAirTitle + "</span>";
                        }
                        if (onAirArtist != undefined && onAirArtist != "") {
                            html += "<span class='artist'>" + onAirArtist + "</span>";
                        }

                        //clean
                        RCS_PALINSESTO.cleanDummyInfoOnAir();
                        if(onAirType == "Song" || onAirType == "" ){
                            //console.log("Song");
                            //append Music Label
                            $(".dummy.view__info .palinsesto_titolo_programma").append(RCS_ONAIR.dummyMusicLabel + ":");
                        }
                        $(".dummy.view__info .palinsesto_titolo_programma").append(html);
                        RCS.infoFromOnAir = true;
                    }
                }
                //console.log("play");
            }
            else {
                this.setAttribute("icon", "volumeThree");
                $(".epg__audioContainer > audio")[0].pause();
                $(".epg__audioContainer > audio").removeClass("played");
                var barsId = $(this).attr("data-bars");
                if(barsId != undefined) {
                    $("#"+barsId).css("display", "none");
                }

                if(audioElement.parent().parent().hasClass("dummy view__info")){

                    var onAirTitle = RCS_ONAIR.currentOnAirTitle;
                    if((RCS_ONAIR.currentOnAirType == "Link" || RCS_ONAIR.currentOnAirType == "SpecificLink" || RCS_ONAIR.currentOnAirType == "CustomAsset") &&
                        (onAirTitle != undefined && onAirTitle != "")){
                        //console.log("case Link");
                        //I leave program info from onair
                        RCS_PALINSESTO.cleanDummyInfoOnAir();
                        $(".dummy.view__info .palinsesto_titolo_programma").append(onAirTitle);
                        RCS.infoFromOnAir = true;

                    }else{

                        //clean and append Music Label
                        //clean
                        RCS_PALINSESTO.cleanDummyInfoOnAir();
                        $(".dummy.view__info .palinsesto_titolo_programma").append(RCS_ONAIR.dummyMusicLabel);
                        RCS.infoFromOnAir = false;

                    }

                }
                //hidden all bars
                $(".live__bar").css("display", "none");
                //console.log("pause");
            }
        });
    },
    pad: function (str, max) {
        str = str.toString();
        return str.length < max ? RCS.pad("0" + str, max) : str;
    },
    padChannel: function(str){
        str = str.toString();
        return str.startsWith("0") ? str.substring(1) : str;
    },
    imageFormat: "<img class='epg_info_img' src='/content/dam/vaticannews/epg/images/%s.jpeg'>",
    recordStored: [],
    storingTime: 59,
    isValidResponse: function(url,getHtml){
        var dateToCheck = new Date();
        dateToCheck.setSeconds(dateToCheck.getSeconds()-RCS.storingTime);
        if (!getHtml)
            return (RCS.recordStored[url]!==undefined && dateToCheck < RCS.recordStored[url]);
        if (RCS.recordStored[url+"_time"]!==undefined && dateToCheck < RCS.recordStored[url+"_time"])
            return RCS.recordStored[url];
        return ""
    },
    storeResponseTime: function(url,storeHtml,html) {
        if (storeHtml){
            RCS.recordStored[url] = html;
            RCS.recordStored[url + "_time"] = new Date();
        }
        else
            RCS.recordStored[url]=new Date();
    },

    activeTab: function(){
        $("#onair_list").fadeIn(1000);
    },

    ajaxRefreshTime: 60,
    ajaxInterval:null
};
var queryIndex;
var queryDate;
var channel;
var language;
var replyLabel;
var dummyMusicLabel = "Music";

RCS_PALINSESTO = {
    timeoutSpinner:null,
    interval:null,
    viewMode:2, /*0=not dummyEvents, 1 only live dummy, 2 all dummy*/
    specialeLive:false,
    specialeLiveInit:undefined,
    lastId:"",
    goToOnAirRowTimeout:undefined,

    init: function(date,replyTranslate,labelMusic,viewMode){
        //console.log("init viewMode:"+viewMode);
        replyLabel = replyTranslate;
        dummyMusicLabel = labelMusic;
        if(viewMode != undefined && (viewMode == 0 || viewMode <=2)) {
            RCS_PALINSESTO.viewMode = viewMode;
        }
        //console.log("viewmode="+RCS_PALINSESTO.viewMode);

        $("coral-tablist[target*='palinsesto'] > coral-tab").on("click",function(){

            if ($(this).hasClass("is-selected"))
                return;
            clearTimeout(RCS_PALINSESTO.timeoutSpinner);
            clearInterval(RCS.ajaxInterval);
            RCS_PALINSESTO.getPalinsesto($(this).attr("data-pal-index"),$(this).attr("data-pal-date"));
            RCS.ajaxInterval = setInterval(function(){RCS_PALINSESTO.getPalinsesto($(this).attr("data-pal-index"),$(this).attr("data-pal-date"))},RCS.ajaxRefreshTime*1000);
            RCS_PALINSESTO.removeDoubleOnAir();
        });

        queryIndex = '0';
        queryDate = date;
        language = VNTemplateUtils._currentHome;

        //exception zht
        if(language=="zht"){
            language="zh";
        }


    },
    binding: function(div,firstTime){
        // console.log("binding");

        if (!firstTime){
            //console.log("in first time check");
            $(div).find(".palinsesto_program coral-icon.replay_icon.info").unbind("click");
            $(div).find("coral-icon.audioPlayer").unbind("click");
            if (RCS_PALINSESTO.interval!==null)
                clearInterval(RCS_PALINSESTO.interval);
        }

        var dotOnAir = $(".dot.dotOnAir");
        if (dotOnAir.length>0) {
            RCS_PALINSESTO.interval = setInterval(function () {
                $(".dot.dotOnAir").toggleClass("hidden");
            }, 1000);
        }

        $(div).find(".palinsesto_program coral-icon.replay_icon.info").on("click", function (e) {
            e.preventDefault();
            e.stopPropagation();
            //Case closing
            if ($(this).hasClass("clicked"))
                RCS.infoOpened = "";
            //Case opening
            else {
                $(".epg__container coral-icon.info.clicked").each(function () {
                    $(this).removeClass("clicked");
                    var divElement = $(this).parent().parent().find(".infoDiv");
                    if (divElement.length==0) divElement = $(this).parent().parent().parent().find(".infoDiv");
                    divElement.toggle("display");
                });
                RCS.infoOpened = "schedules###" + $(this).attr("data-title").trim() + "###" + $(this).attr("data-orario") + "###" + queryIndex;
            }
            $(this).toggleClass("clicked");
            $(this).parent().parent().find("div.palinsesto__info").toggle("display");
        });

        RCS.listenBinding($(div).find("coral-icon.audioPlayer.coral-Icon"),"schedules");
        if (!firstTime) {
            //console.log("scheduler checkAudioPlayed")
            RCS.checkAudioPlayed();
        }
    },

    getData: function(){
        clearTimeout(RCS_PALINSESTO.timeoutSpinner);
        //console.log("queryIndex: "+queryIndex);
        //console.log("queryIndex: "+queryDate);
        $("coral-panelstack#palinsesto").css("display","");
        $(".epg-palinsesto-container > .loadingSpinner").removeClass("loading");

        var div = document.querySelector("#palinsesto > #tab-" + queryIndex);
        var url = '/bin/rcs/getpalinsesto.dir/' + language + '/' + queryDate + ".json";
        var isValidResponse = RCS.isValidResponse(url,true);
        if (isValidResponse==="") {
            if (div.innerHTML.replace("<coral-panel-content>","").replace("</coral-panel-content>","").trim()==="")
                $("coral-panelstack#palinsesto").css("display","none");
            RCS_PALINSESTO.timeoutSpinner = setTimeout(function(){
                $("coral-panelstack#palinsesto").css("display","none");
                $(".epg-palinsesto-container > .loadingSpinner").addClass("loading");
            }, 500);
            $.ajax({
                type: 'GET',
                url: url,
                success: function (data) {
                    var html = "";
                    var isPlayBox ="";
                    var previus="";
                    var previusEventEndDate=""
                    var onAirTrovato=false;

                    for (var i = 0; i < data.palinsesto.length; i++) {
                        var titolo = "";
                        var artist = "";
                        var descrizione = "";
                        var iesimo = data.palinsesto[i];
                        var titoloEN = "", descEN = "", titoloIT = "", descIT = "";
                        var guId = "";
                        var programId = "";
                        var special = iesimo.isSpecial!=undefined ? iesimo.isSpecial : false;
                        var statusLive = iesimo.statusLive!=undefined ? iesimo.statusLive : '';
                        var manualStart = iesimo.manualStart!=undefined ? iesimo.manualStart : false;

                        //var langProgram = iesimo.IDLingua;
                        titolo = iesimo.TitoloProgramma;
                        descrizione = iesimo.DescrizioneProgramma;
                        artist = iesimo.artist;
                        guId = iesimo.guId;
                        programId = iesimo.programId;
                        name = iesimo.name;

                        var specialClass="";
                        if( special && iesimo.translaters!=undefined){
                            specialClass= "special"
                            descrizione = iesimo.translaters.description;
                            titolo = iesimo.translaters.title;
                        }

                        if (titolo==undefined || titolo === "" ) {
                            titoloEN = iesimo.TitoloProgrammaEN;
                            titoloIT = iesimo.TitoloProgrammaIT;
                            if (language === "it" || titoloEN === "") titolo = titoloIT;
                            if (language === "en" || titoloIT === "") titolo = titoloEN;
                            if (titolo === "") titolo = titoloEN !== "" ? titoloEN : iesimo.TitoloProgramma;
                            //if it is still null I take a name
                            if (titolo === "") titolo = name;

                        }
                        if (descrizione==undefined || descrizione === "") {
                            descEN = iesimo.DescrizioneProgrammaEN;
                            descIT = iesimo.DescrizioneProgrammaIT;
                            if (language === "it" || descEN === "") descrizione = descIT;
                            if (language === "en" || descIT === "") descrizione = descEN;
                            if (descrizione === "") descrizione = descEN !== "" ? descEN : iesimo.DescrizioneProgramma;
                        }

                        var inizio = (iesimo.real_start_time!=undefined ? Date.parse(iesimo.real_start_time) : Date.parse(iesimo.startDate) );
                        var fine = Date.parse(iesimo.endDate);
                        var inizioDate = new Date(inizio);
                        var fineDate = new Date(fine);
                        var isOnAir = false;
                        var type = iesimo.type;
                        var now = new Date();




                        var onAir = false;
                        var skipClass = '';
                        if (special) {
                            console.log("special");
                            if (manualStart && statusLive == 'live') {
                                console.log("manual start --> live");
                                onAir = true;
                                onAirTrovato = true;
                                RCS_PALINSESTO.specialeLive=true;
                                RCS_PALINSESTO.specialeLiveInit=inizioDate;
                            } else if (manualStart != true && (now.valueOf() >= inizioDate.valueOf() && now.valueOf() < fineDate.valueOf())) {
                                console.log("schedule start --> live");
                                onAir = true;
                                onAirTrovato = true;
                            }

                        } else if (now.valueOf() >= inizioDate.valueOf() && now.valueOf() < fineDate.valueOf()) {
                            console.log("not special --> live");
                            onAir = true;
                            onAirTrovato = true;
                            if(RCS_PALINSESTO.specialeLive){
                                skipClass = 'skip';
                            }
                        } else if( (RCS_PALINSESTO.specialeLive && RCS_PALINSESTO.specialeLiveInit!=undefined) && (inizioDate.valueOf()>=RCS_PALINSESTO.specialeLiveInit && inizioDate.valueOf()<=now.valueOf() )){
                            console.log("skipped")
                            skipClass = 'skip';
                        }





                        //NOW condition: read info from on-air
                        var nowCondition = false;

                        if (onAir) {
                            nowCondition = true;
                            //retrieves info from on air if is it Link/SpecialLink
                            if (RCS_ONAIR.currentOnAirType == "Link" || RCS_ONAIR.currentOnAirType == "SpecificLink" || RCS_ONAIR.currentOnAirType == "CustomAsset") {
                                if (RCS_ONAIR.currentOnAirTitle != undefined && RCS_ONAIR.currentOnAirTitle != "") {
                                    titolo = RCS_ONAIR.currentOnAirTitle;
                                }

                                if (RCS_ONAIR.currentOnAirStart != undefined && RCS_ONAIR.currentOnAirStart != "") {
                                    inizioDate = RCS_ONAIR.currentOnAirStart;
                                }
                            }
                        }


                        if (i == 0) {
                            //add  midnight dummy event if not exist any event
                            var midnightDate = new Date(inizioDate);
                            midnightDate.setHours(0,0,0,0);
                            if(inizioDate > midnightDate) {
                                html += RCS_PALINSESTO.createDummyEvent("00:00", dummyMusicLabel, "midnight");
                            }
                        }


                        //add dummy event if previus event end date < current event start date
                        if (previusEventEndDate != "" && previusEventEndDate < inizioDate){
                            var previusEventEndTime = RCS.pad(previusEventEndDate.getHours(), 2) + ":" + RCS.pad(previusEventEndDate.getMinutes(), 2);
                            html += RCS_PALINSESTO.createDummyEvent(previusEventEndTime, dummyMusicLabel, i - 1);
                        }




                        var orarioInizio = RCS.pad(inizioDate.getHours(), 2) + ":" + RCS.pad(inizioDate.getMinutes(), 2);
                        var orarioFine = RCS.pad(fineDate.getHours(), 2) + ":" + RCS.pad(fineDate.getMinutes(), 2);

                        html += "<div class='radioProgram__wrapper "+specialClass+" "+skipClass+"' data-program='"+programId+"' data-guid='"+guId+"' data-init='"+orarioInizio+"' data-end='"+orarioFine+"' id='wrapper-"+i+"'>";
                        if (special) html += "<span class=\"tooltiptext\">"+ (language === "it" ? "Evento Speciale" : "Special Event" )+"</span>";

                        if (nowCondition) {
                            html += "  <div class='palinsesto_program onAir'>";
                            isOnAir=true;
                        }
                        else
                            html += "  <div class='palinsesto_program'>";

                        html += "    <div class='palinsesto_ora_programma'>";
                        var orarioInizio = RCS.pad(inizioDate.getHours(), 2) + ":" + RCS.pad(inizioDate.getMinutes(), 2);
                        html += "       <p>" +(nowCondition ? RCS.pad(now.getHours(), 2) + ":" + RCS.pad(now.getMinutes(), 2) :  orarioInizio )+ "</p>";
                        if (isOnAir) html += "<span class='dot dotOnAir'></span>";
                        html += "    </div>";
                        html += "    <div class='palinsesto_titolo_programma'>";
                        html += titolo;
                        html += "    </div>";

                        var isInfoOpened = RCS.infoOpened==="schedules###"+titolo+"###"+orarioInizio+"###"+queryIndex;


                        if (nowCondition) {
                            html += "<coral-icon title='Ascolta' class='audioPlayer replay_icon coral-Icon listenIcon' icon=\"volumeThree\" data-audio=\""+RCS.getUrlAudioFromLanguage(language)+"\" size=\"M\"></coral-icon>";
                            html += "<div class='playerContainer'>";
                            html += "</div>";
                            isPlayBox = true;
                        }


                        if((type=="SpecificLink" || type=="Link" || type=="CustomAsset") && descrizione!=''){
                            html += "    <coral-icon class='replay_icon info" + (isInfoOpened ? " clicked" : "") + "' icon='infoCircle' data-orario='" + orarioInizio + "' data-title='" + titolo.replace(/'/g, "&#39;") + "' size='M'></coral-icon>";
                        }

                        html += "   </div>";
                        html += "   <div class='palinsesto__info infoDiv'" + (isInfoOpened ? " style='display:block'" : "") + ">";

                        if (iesimo.originale != undefined) {
                            var originaleInizio = Date.parse(iesimo.originale.startDate);
                            var originaleInizioDate = new Date(originaleInizio);
                            var dateFormatted = AemUtils.formatDate(originaleInizioDate,AemUtils.TEASER_DATE_FORMAT);
                            html += " <div class='replica'> ("+replyLabel+dateFormatted;
                            html += " " + RCS.pad(originaleInizioDate.getHours(), 2) + ":" + RCS.pad(originaleInizioDate.getMinutes(), 2) + ")</div>";
                        }

                        html += "       <div class='palinsesto_descrizione'>";

                        if (iesimo.hasImage != undefined && iesimo.hasImage)
                            html += RCS.imageFormat.replace("%s",iesimo.NomeProgramma);

                        html += descrizione;
                        html += "</div>";

                        html += "</div>";
                        html += "</div>";


                        //save lastTerminated
                        if(inizioDate <= now){
                            lastId = "wrapper-"+i;
                            RCS_PALINSESTO.lastId = "wrapper-"+i;
                        }



                        var midnightDate = new Date();
                        midnightDate.setHours(24,0,0,0);
                        //last dummy event
                        if (i == data.palinsesto.length - 1 && fineDate<midnightDate) {
                            var endTimeDate = RCS.pad(fineDate.getHours(), 2) + ":" + RCS.pad(fineDate.getMinutes(), 2);
                            html += RCS_PALINSESTO.createDummyEvent(endTimeDate, dummyMusicLabel, i);
                        }

                        //update previewsEventEndTime
                        previusEventEndDate = fineDate;

                    }

                    clearTimeout(RCS_PALINSESTO.timeoutSpinner);
                    div.innerHTML = html;

                    if(!isPlayBox){
                        RCS_PALINSESTO.viewDummyPlayerMusicEvent();
                    }

                    $(".epg-palinsesto-container > .loadingSpinner").removeClass("loading");
                    $("coral-panelstack#palinsesto").css("display","");
                    RCS.storeResponseTime(url,true,html);
                    RCS_PALINSESTO.binding(div);


                    if($(".radioProgram__wrapper.special .onAir").length>0){
                        $(".radioProgram__wrapper:not('.special') .onAir").remove();
                    }


                    RCS_PALINSESTO.goToOnAirRow();

                }


            });
        }
        else {
            div.innerHTML = isValidResponse;
            $(".epg-palinsesto-container > .loadingSpinner").removeClass("loading");
            $("coral-panelstack#palinsesto").css("display","");
            RCS_PALINSESTO.binding(div);
        }

    },



    createDummyEvent: function(startDate,titolo,id){

        if(RCS_PALINSESTO.viewMode == 2) {
            var html = "<div class='radioProgram__wrapper' id='wrapper_dummy" + id + "'>";
            html += "  <div class='palinsesto_program'>";
            html += "    <div class='palinsesto_ora_programma'>";

            html += "       <p>" + startDate + "</p>";
            html += "    </div>";
            html += "    <div class='palinsesto_titolo_programma'>";
            html += titolo;
            html += "    </div>";
            html += "   </div></div>";
            return html;
        } else{
            return "";
        }



    },

    viewDummyPlayerMusicEvent: function(){
        if(RCS_PALINSESTO.viewMode == 2 || RCS_PALINSESTO.viewMode == 1 ) {
            if (!$('.palinsesto_program.onAir').length) {
                //console.log("aggiungo dummy music event in" + RCS_PALINSESTO.lastId);

                //remove double wrapper_dummy
                var doubleWrapperID = RCS_PALINSESTO.lastId.replace("wrapper-", "wrapper_dummy");
                $("#" + doubleWrapperID).remove();




                /*----current info music from live now ----*/
                var defaultLabel = dummyMusicLabel;
                var currentInfoMusic  = "";
                var separator =":";

                var onAirTitle = RCS_ONAIR.currentOnAirTitle; //$("#onair_list .onair_titolo").html();
                var onAirArtist = RCS_ONAIR.currentOnAirArtist; //$("#onair_list .onair_artist").html();
                var onAirType = RCS_ONAIR.currentOnAirType;


                if((onAirType=="Link" || onAirType=="SpecificLink" || onAirType == "CustomAsset") &&
                    (onAirTitle != undefined && onAirTitle != "")){
                    //console.log("is Link");
                    RCS.infoFromOnAir = true; //active read info form onair
                    defaultLabel = ""; //is Link --> remove music label
                    separator = "";
                }

                var checkOnAirIsNotDummy = $("#onair_list .onair__main_info.dummy");

                if (checkOnAirIsNotDummy.length==0 && RCS.infoFromOnAir==true) {
                    //console.log("valid");
                    //console.log("onAir not dummy contain info");



                    //clean
                    RCS_PALINSESTO.cleanDummyInfoOnAir();


                    if (onAirTitle != undefined && onAirTitle != "") {
                        currentInfoMusic +=  "<span class='title from_live'> "+ separator + onAirTitle + "</span>";
                    }
                    if (onAirArtist != undefined && onAirArtist != "") {
                        currentInfoMusic += "<span class='artist'>" + onAirArtist + "</span>";
                    }

                }


                /*-----*/

                var play = "<coral-icon title='Ascolta' class='audioPlayer replay_icon coral-Icon listenIcon' icon=\"volumeThree\" data-audio=\"" + RCS.getUrlAudioFromLanguage(language) + "\" size=\"M\"></coral-icon>";
                play += "<div class='playerContainer'>";
                play += "</div>";


                var musicRow = "<div class='radioProgram__wrapper dummy view__info' id='wrapperMusic'>";
                musicRow += "  <div class='palinsesto_program onAir'>";


                musicRow += "    <div class='palinsesto_ora_programma'>";
                var dt = new Date();
                var orarioInizio = ('0' + dt.getHours()).slice(-2) + ":" + ('0' + dt.getMinutes()).slice(-2);

                musicRow += "       <p>" + orarioInizio + "</p>";
                musicRow += "<span class='dot dotOnAir'></span>";
                musicRow += "    </div>";
                musicRow += "    <div class='palinsesto_titolo_programma'>";
                musicRow += defaultLabel + currentInfoMusic;
                musicRow += "    </div>";

                musicRow += play;
                $("#" + RCS_PALINSESTO.lastId).append(musicRow);

                //for new manual logic
                RCS_PALINSESTO.prolongedEvent();


                var audioElement = $(".audioPlayer");
                RCS.listenBinding(audioElement);
            }
        }
    },

    getPalinsesto: function(index, date){
        try {
            if (index==undefined){
                var tabSelected =  $("coral-tablist[target='#palinsesto'] > coral-tab[selected]");
                index = tabSelected.attr("data-pal-index");
                date = tabSelected.attr("data-pal-date");
            }

            if (index!==undefined){
                queryIndex = index;
                queryDate = date;
            }

            channel = $("select#channelSelect").val();
            RCS_PALINSESTO.getData();
        }
        catch(e){
            //console.error("Error during client refresh RCS SCHEDULES: " + e.message);
        }
    },


    prolongedEvent: function(){

        //console.log("prolongedEvent");
        var parentWrapperGUID ="";
        var prevEventElem = $("#wrapperMusic").parent();
        var prevID = $(prevEventElem).attr("id");
        parentWrapperGUID = $(prevEventElem).attr("data-guid");

        if(parentWrapperGUID == RCS_ONAIR.currentOnAirGuID ){
            //is prolonged
            var prolongedEventTitle = $("#"+prevID+" .palinsesto_titolo_programma").html();
            console.log("is prolongedEvent:"+parentWrapperGUID + " - "+prolongedEventTitle);
            if(prolongedEventTitle != undefined){
                $("#wrapperMusic .palinsesto_program .palinsesto_titolo_programma").html(prolongedEventTitle);
                $("#"+prevID+" > .palinsesto_program:first-child").css("display","none");
            }
        }

    },

    cleanDummyInfoOnAir: function(){
        $(".dummy.view__info .palinsesto_titolo_programma").html("");
    },

    removeDoubleOnAir(){
        if($(".radioProgram__wrapper.special .onAir").length>0){
            $(".radioProgram__wrapper:not('.special') .onAir").remove();
        }
    },

    goToOnAirRow() {
        //console.log("goto");
        try {
            if ($(".onAir").offset().top != undefined) {
                if (RCS_PALINSESTO.goToOnAirRowTimeout) {
                    clearTimeout(RCS_PALINSESTO.goToOnAirRowTimeout);
                }

                RCS_PALINSESTO.goToOnAirRowTimeout = setTimeout(function () {
                    $('html, body').animate({
                        scrollTop: ($(".onAir").offset().top - 300)
                    }, 300);
                }, 300);
            }
        }catch{}

    },


};
RCS_EVENTI = {

    /*for now use EPG*/

    main: function(lang){
        try {
            RCS_EVENTI.getEventi(lang);
        }
        catch(e){
            console.error("Error during client refresh RCS EVENTS: " + e.message);
        }
    },
    listenLabel: "",
    init: function(listenLabel,firstTime){
        if (!firstTime)
            $(".event__container .coral-Icon.listen").unbind("click");
        else
            RCS_EVENTI.listenLabel = listenLabel;

        RCS.listenBinding($(".event__container .coral-Icon.listen"),"events");
        if (!firstTime) {
           //console.log("events checkAudioPlayed");
            RCS.checkAudioPlayed();
        }
    },
    getEventi: function(lang){
        var url = '/bin/epg/geteventi.dir/' + lang + ".json";
        var div = document.getElementById("event__list");
        var isValidResponse = RCS.isValidResponse(url);
        if (!isValidResponse) {
            $.ajax({
                type: 'GET',
                url: url,
                success: function (data) {

                    var html = "";
                   //console.log("lunghezza:"+data.eventi.length);
                    for (var i = 0; i<data.eventi.length; i++) {

                        var inizio = Date.parse(data.eventi[i].Orainizio);
                        var inizioDate = new Date(inizio);
                        var fine = Date.parse(data.eventi[i].Orafine);
                        var fineDate = new Date(fine);

                        var now = new Date();
                        var onair = now >= inizioDate &&  now <= fineDate;

                        var oraInizio = RCS.pad(inizioDate.getHours(), 2) + ":" + RCS.pad(inizioDate.getMinutes(), 2);
                        var oraFine = RCS.pad(fineDate.getHours(), 2) + ":" + RCS.pad(fineDate.getMinutes(), 2);
                        inizio = AemUtils.formatDate(inizioDate,AemUtils.TEASER_DATE_FORMAT);

                        var viewBar="";
                        if($("#liveBars_"+i+"").attr("style") == "display: block;"){
                            viewBar = "style=\"display: block;\"";
                        }

                        html += "<div class='event__container'>";

                        html += '<div id="liveBars_'+i+'" class="live__bar" '+viewBar+'>';
                        for(var bars=0; bars<22; bars++){
                            html += "<div class='bar'></div>";
                        }
                        html +="</div>";


                        html += "   <div class='event__data__title'>";
                        html += "       <div class='event__data'>" + inizio + "</div>";
                        html += "       <div class='event__title'>" + data.eventi[i].Titolo + "</div>";
                        html += "    </div>";
                        html += "    <div class='event__ora__description'>";
                        html += "       <div class='event__ora'>" + oraInizio + " - " + oraFine + "</div>";
                        html += "       <div class='event__description'>" + data.eventi[i].Descrizione + "</div>";
                        html += "    </div>";

                        var obj = data.eventi[i];
                        html += "   <div class='event_channels'>";
                        for (var p in obj) {
                            if (obj.hasOwnProperty(p)) {
                                if (p.startsWith("dtl_")) {
                                    var dettaglio = obj[p];

                                    var channel = dettaglio.IDUtl.toLowerCase().split("wli")[1];
                                   //console.log("channel:"+channel);

                                    html += "       <div class='event_channel'>";
                                    html += "			 <div class='radio__station'><span>CH" + RCS.padChannel(channel) + "</span></div>";
                                    html += "			<div class='info__diffusione'>" + dettaglio.Origine + " - " + dettaglio.InfoDiffusione + "</div>";
                                    if (onair) html += "<coral-icon class='event_channel_icon listen listenIcon coral-Icon' title='Ascolta' icon='volumeThree' size='M'  data-bars='liveBars_"+i+"' data-audio='"+RCS.getEPGUrlAudioFromLanguage(dettaglio.IDUtl)+"'></coral-icon>";
                                    html += "       </div>";
                                }
                            }
                        }
                        html += "    </div>";

                        html += "   <div class='event_separator'></div>";
                        html += "</div>";
                    }

                    if(div!=null) {
                        div.innerHTML = html;
                    }
                    RCS.storeResponseTime(url);
                    RCS_EVENTI.init();
                }
            });
        }
    }
};
RCS_SPECIALI = {



    main: function(lang){

        RCS_SPECIALI.getSpeciali(lang);

    },
    listenLabel: "",
    init: function(listenLabel,firstTime){
        //debugger;
        if (!firstTime)
            $(".event__container .coral-Icon.listen").unbind("click");
        else
            RCS_SPECIALI.listenLabel = listenLabel;

        RCS.listenBinding($(".event__container .coral-Icon.listen"),"events");
        if (!firstTime) {
            //console.log("events checkAudioPlayed");
            RCS.checkAudioPlayed();
        }
    },
    getSpeciali: function(lang){
        var url = '/bin/rcs/getspeciali.dir/' + lang + ".json";
        var div = document.getElementById("event__list");
        var isValidResponse = RCS.isValidResponse(url);
        if (!isValidResponse) {
            $.ajax({
                type: 'GET',
                url: url,
                success: function (data) {

                    var html = "";
                    //console.log("lunghezza:"+data.eventi.length);
                    for (var i = 0; i<data.speciali.length; i++) {

                        var specialObj = data.speciali[i];


                        //todo se non si vuole aggiornare la data di inzio e fine evento non gestire i real time
                        var inizio = (specialObj.real_start_time!=undefined ? Date.parse(specialObj.real_start_time) :  Date.parse(specialObj.startDate) );
                        var inizioDate = new Date(inizio);
                        var fine = (specialObj.real_end_time!=undefined ? Date.parse(specialObj.real_end_time) : Date.parse(specialObj.endDate) );
                        var fineDate = new Date(fine);
                        var title = specialObj.title;
                        var description = specialObj.description;
                        var diffusionInfo;
                        var webradio;
                        var playerLang = lang;
                        var socialShareInfo;
                        var statusLive = specialObj.statusLive!=undefined ? specialObj.statusLive : '';
                        var manualStart = specialObj.manualStart!=undefined ? specialObj.manualStart : false;

                        var endInnextDay = false;
                        var nextDateInfo ="";
                        if(fineDate.getDate() > inizioDate.getDate()){
                            endInnextDay = true;
                            nextDateInfo =  "( "+RCS.pad(fineDate.getDate(), 2) + "-" + RCS.pad(fineDate.getMonth()+1, 2)+ "-" + RCS.pad(fineDate.getFullYear(), 2)+" )";
                        }

                        /*translater info for current language
                        for now if not exist translate or is vn_share_schedule !=true non view special
                         */

                        if(specialObj.translation==undefined){
                            console.log("not view special trasmission for this channel")
                            continue;
                        }


                        var translation =  specialObj.translation;

                        if(translation.title!=undefined){
                            title = translation.title;
                        }
                        if(translation.description!=undefined){
                            description = translation.description;
                        }

                        if(translation.diffusionInfo!=undefined){
                            diffusionInfo = translation.diffusionInfo;
                        }

                        if(translation.webradio!=undefined){
                            webradio = translation.webradio;
                        }

                        if(translation.socialShareInfo!=undefined){
                            socialShareInfo = translation.socialShareInfo;
                        }

                        if(translation.lang!=undefined){
                            playerLang = translation.lang;
                        }


                        var now = new Date();

                        /* condizione di onAir
                        case manulStart: (manualStart == true && statusLive=='live')
                        case scheduled date: (manualStart!=true && (now >= inizioDate &&  now <= fineDate))
                         */

                        var onair = ( (manualStart && statusLive=='live') || (manualStart!=true  && (now >= inizioDate &&  now <= fineDate)));

                        var oraInizio = RCS.pad(inizioDate.getHours(), 2) + ":" + RCS.pad(inizioDate.getMinutes(), 2);
                        var oraFine = RCS.pad(fineDate.getHours(), 2) + ":" + RCS.pad(fineDate.getMinutes(), 2);
                        inizio = AemUtils.formatDate(inizioDate,AemUtils.TEASER_DATE_FORMAT);

                        var viewBar="";
                        if($("#liveBars_"+i+"").attr("style") == "display: block;"){
                            viewBar = "style=\"display: block;\"";
                        }

                        html += "<div class='event__container'>";

                        html += '<div id="liveBars_'+i+'" class="live__bar" '+viewBar+'>';
                        for(var bars=0; bars<22; bars++){
                            html += "<div class='bar'></div>";
                        }
                        html +="</div>";


                        html += "   <div class='event__data__title'>";
                        html += "       <div class='event__data'>" + inizio + "</div>";
                        html += "       <div class='event__title'>" + title + "</div>";
                        html += "    </div>";
                        html += "    <div class='event__ora__description'>";
                        html += "       <div class='event__ora"+(endInnextDay ? ' end_next_day' : '')+"'>" + oraInizio + " - " + ( now.valueOf() > fineDate.valueOf() &&  statusLive=='live'  ? 'live' :  oraFine  )+ " "+( statusLive!='live' && endInnextDay ?  nextDateInfo : '')+"</div>";
                        html += "       <div class='event__description"+(endInnextDay ? ' end_next_day' : '')+"'>" + description + "</div>";
                        html += "    </div>";



                        html += "   <div class='event_channels'>";

                        /*for now only specific channel and max internation channel if exist */
                        html += "       <div class='event_channel'>";
                        if (diffusionInfo!=undefined && diffusionInfo!="") {
                            html += "			 <div class='radio__station'><span> " + playerLang.toUpperCase() + " </span></div>";
                            html += "			<div class='info__diffusione'>" + diffusionInfo + "</div>";
                        }
                        if (onair && webradio) html += "<coral-icon class='event_channel_icon listen listenIcon coral-Icon' title='Ascolta' icon='volumeThree' size='M'  data-bars='liveBars_"+i+"' data-audio='"+RCS.getUrlAudioFromLanguage(lang)+"'></coral-icon>";
                        if (socialShareInfo!=undefined && socialShareInfo!="") html += "<div class='info__socil_share'>" +socialShareInfo+ "</div>";;

                        html += "       </div>";
                        html +="<div class=\"channel_separator\"></div>";

                        html += "    </div>";


                        html += "   <div class='event_separator'></div>";
                        html += "</div>";
                    }

                    if(div!=null) {
                        div.innerHTML = html;
                    }
                    RCS.storeResponseTime(url);
                    RCS_SPECIALI.init();
                }
            });
        }
    }
};
var language;

RCS_REPLAY = {
    init: function(isSearch,alsoPrograms,lastPuntataDateLabel,searchResultsLabel,firstTime){
        if (!firstTime) {
            $(".replay_container .replay_tools .replay_icon.listen").unbind("click");
            $(".replay_container coral-icon.replay_icon.info").unbind("click");
            $(".replay_container coral-icon.replay_icon.rss").unbind("click");
            $(".replay_container coral-icon.replay_icon.download").unbind("click");
        }
        else {
            RCS_REPLAY.lastPuntataDateLabel = lastPuntataDateLabel;
            RCS_REPLAY.searchResultsLabel = searchResultsLabel;
        }

        RCS.listenBinding($(".replay_container .replay_tools .replay_icon.listen"),"replay");

        $(".replay_container .replay_tools .replay_icon.info").on("click", function (e) {
            e.preventDefault();
            e.stopPropagation();
            //Case closing
            if ($(this).hasClass("clicked"))
                RCS.infoOpened = "";
            //Case opening
            else {
                $(".epg__container coral-icon.info.clicked").each(function () {
                    $(this).removeClass("clicked");
                    var divElement = $(this).parent().parent().find(".infoDiv");
                    if (divElement.length==0) divElement = $(this).parent().parent().parent().find(".infoDiv");
                    divElement.toggle("display");
                });
                RCS.infoOpened = "replay"+(isSearch ? alsoPrograms ? "Programs" : "Search" : "")+"###" + $(this).attr("data-title").trim();
            }
            $(this).toggleClass("clicked");
            $(this).parent().parent().find("div.replay_info_puntata").toggle("display");
        });

        $(".replay_container .replay_tools .replay_icon.rss").on("click", function (e) {
            e.preventDefault();
            e.stopPropagation();
            var rssLink = $(this).attr("data-href");
            window.open(rssLink,"_blank");
        });

        $(".replay_container .replay_tools .replay_icon.download").on("click", function (e) {
            e.preventDefault();
            e.stopPropagation();
            var downloadLink = $(this).attr("data-href");
            window.open(downloadLink,"_blank");
        });

        if (!firstTime) {
           //console.log("checkAudioPlayed replay");
            RCS.checkAudioPlayed();
        }
    },
    lastPuntataDateLabel: "",
    searchResultsLabel: "",
    main: function(lang,isSearch,alsoPrograms){
        try {
            if (!isSearch) language = lang;
            RCS_REPLAY.getReplay(isSearch,alsoPrograms,lang);
        }
        catch(e){
            console.error("Error during client refresh RCS REPLAY: " + e.message);
        }
    },

    getReplay: function(isSearch,alsoPrograms,langForSearch){
       //debugger;
        var div = (isSearch ? (alsoPrograms ? $(".epg-search-content.epg-search-program-content")[0] : $(".epg-search-content.epg-search-podcast-content")[0]) : document.getElementById("replay_list"));
        var url = '/bin/rcs/getreplay.dir/' + (isSearch ? (alsoPrograms ? "searchPrograms/" : "") + langForSearch : language) + ".json";
        var response = RCS.isValidResponse(url,isSearch);
        var isValidResponse = (isSearch ? response!=="" : response);
        if (!isValidResponse) {
            if (isSearch) $(".epg-search-content.epg-search-" + (alsoPrograms ? "program" : "podcast") + "-content").html("");
            $.ajax({
                type: 'GET',
                url: url,
                success: function(data){

                    var html = "";
                    for (var i = 0; i < data.replay.length; i++){
                        var lastPuntata = data.replay[i].lastPuntata;
                        if (!alsoPrograms && (lastPuntata===undefined || lastPuntata==""))
                            continue;
                        var lastPuntataData = data.replay[i].lastPuntataData;
                        var RssProgramma = data.replay[i].RssProgramma;
                        var contentReference = data.replay[i].contentReference;
                        var contentLink = !alsoPrograms && contentReference!==undefined && contentReference!=="";
                        var lastPuntataValid = false;
                        var titolo = "";
                        var descrizione = "";
                        var titoloEN = "",descEN = "",titoloIT = "",descIT = "";
                        if (langForSearch==language){
                            titolo = data.replay[i].TitoloProgramma;
                            descrizione = data.replay[i].DescrizioneProgramma;
                        }
                        else {
                            titoloEN = data.replay[i].TitoloProgrammaEN;
                            descEN = data.replay[i].DescrizioneProgrammaEN;

                            titoloIT = data.replay[i].TitoloProgrammaIT;
                            descIT = data.replay[i].DescrizioneProgrammaIT;

                            if (language==="it" || titoloEN==="") titolo = titoloIT;
                            if (language==="it" || descEN==="") descrizione = descIT;

                            if (language==="en" || titoloIT==="") titolo = titoloEN;
                            if (language==="en" || descIT==="") descrizione = descEN;

                            if (titolo==="") titolo = data.replay[i].TitoloProgramma;
                            if (descrizione==="") descrizione = data.replay[i].DescrizioneProgramma;
                        }

                        var isInfoOpened = RCS.infoOpened==="replay"+(isSearch ? alsoPrograms ? "Programs" : "Search" : "")+"###"+titolo;

                        if (lastPuntataData!==undefined && lastPuntataData!=="") {
                            var inizio = Date.parse(lastPuntataData);
                            var inizioDate = new Date(inizio);
                            inizioDate = AemUtils.formatDate(inizioDate,AemUtils.EXTENDED_DATE_FORMAT);
                            lastPuntataValid = true;
                        }
                        var hasImage = data.replay[i].hasImage != undefined && (data.replay[i].hasImage);
                        var hasDesc = descrizione!==undefined && descrizione !== "";

                        html += "<div class='replay_container'>";
                        html += "    <div class='replay_program_title'>" + (contentLink ? "<a target='_blank' href='"+contentReference+"'>" : "") + titolo + (contentLink ? "</a>" : "") + "</div>";
                        html += "    <div class='replay_tools'>";
                        if (!alsoPrograms) {
                            html += "        <coral-icon class='replay_icon listen listenIcon coral-Icon' icon='volumeThree' size='M' data-audio='" + lastPuntata + "'></coral-icon>";
                            html += "           <coral-icon class='replay_icon download' icon='download' size='M' data-href='"+lastPuntata+"'></coral-icon>";
                            html += "        <coral-icon class='replay_icon rss' icon='rss' " + (RssProgramma!==undefined && RssProgramma!=="" ? "data-href='"+RssProgramma+"' " : "") + "size='M'></coral-icon>";
                        }
                        html += "        <coral-icon class='replay_icon info" + (isInfoOpened ? " clicked" : "") + "' " + (lastPuntataValid || hasDesc ? "" : "data-hide='true' ") + "icon='infoCircle' data-title='"+titolo.replace(/'/g, "&#39;")+"' size='M'></coral-icon>";
                        html += "    </div>";
                        html += "    <div class='replay_info_puntata infoDiv'" + (isInfoOpened ? "style='display:block'" : "") + ">";

                        if (lastPuntataValid) {
                            html += "<coral-icon icon='calendar' size='M'></coral-icon>";
                            html += RCS_REPLAY.lastPuntataDateLabel + ": " + inizioDate;
                        }

                        if (hasDesc) {
                            html += "<div class='replay_info_desc'>";
                            html += (hasImage ? RCS.imageFormat.replace("%s", data.replay[i].NomeProgramma) : "");
                            html += (hasDesc ? descrizione : "");
                            html += "</div>";
                        }

                        html += "    </div>";
                        html += "    <div class='replay_separator'></div>";
                        html += "</div>";
                    }
                    if (data.replay.length==0)
                        html = '<div class="replay_container">    <div class="replay_program_title">'+RCS_REPLAY.searchResultsLabel+': 0</div></div>';

                   //console.log("errore");
                    if(div!=null) {
                        div.innerHTML = html;
                    if (isSearch)
                        $(div).attr("data-url-html",url);
                    }
                    RCS.storeResponseTime(url,isSearch,html);
                    RCS_REPLAY.init(isSearch,alsoPrograms);
                }
            });
        }
        else if (isSearch && $(div).attr("data-url-html")!==url) {
            div.innerHTML = response;
            RCS_REPLAY.init();
        }
    }
};
var language;

RCS_ONAIR = {
    language:"",
    langEpg:"",
    dummyMusicLabel: "Music",
    currentOnAirStart:"",
    currentOnAirEnd:"",
    currentOnAirGuID:"",
    currentOnAirType:"",
    currentOnAirTitle:"",
    currentOnAirArtist:"",
    goToOnAirRowTimeout:undefined,
    main: function(langRCS,lagEPG,firstTime){
        try {
            this.language = langRCS;
            if (firstTime){
                RCS_ONAIR.init(true);
            }

            if(lagEPG!=undefined){
                this.langEpg = lagEPG;
            }else{
                this.langEpg = langRCS;
            }

            RCS_ONAIR.getOnAir();
        }
        catch(e){
            console.error("Error during client refresh RCS_ONAIR ONAIR: " + e.message);
        }


    },
    init: function(firstTime){
        if (!firstTime){
            $(".onair_list .coral-Icon.listen").unbind("click");
            $(".onair_container coral-icon.replay_icon.info").unbind("click");
        }

        RCS.listenBinding($(".onair_list .coral-Icon.listen"),"onair");

        $(".onair_container coral-icon.replay_icon.info").on("click", function (e) {
            e.preventDefault();
            e.stopPropagation();
            //Case closing
            if ($(this).hasClass("clicked"))
                RCS_ONAIR.infoOpened = "";
            //Case opening
            else {
                $(".epg__container coral-icon.info.clicked").each(function () {
                    $(this).removeClass("clicked");
                    var divElement = $(this).parent().parent().find(".infoDiv");
                    if (divElement.length==0) divElement = $(this).parent().parent().parent().find(".infoDiv");
                    divElement.toggle("display");
                });
                RCS_ONAIR.infoOpened = "onair###" + $(this).attr("data-title").trim();
            }
            $(this).toggleClass("clicked");
            $(this).parent().parent().parent().find("div.onair_info_puntata").toggle("display");
        });

        if (!firstTime) {
            //console.log("onair checkAudioPlayed");
            RCS.checkAudioPlayed();
        }
    },




    buildPuntateHTML: function(html, object){


        var inizio = (object.real_start_time!=undefined ? Date.parse(object.real_start_time) :  Date.parse(object.startDate) );
        var fine = (object.real_end_time!=undefined ? Date.parse(object.real_end_time) : Date.parse(object.endDate) );

        var inizioDate = new Date(inizio);
        var fineDate = new Date(fine);

        var type = object.rcsType!=undefined ? object.rcsType : '';
        var isLiveForGSelector = object.live!=undefined ? object.live : false;

        var isSpecial = object.isSpecial!=undefined ? object.isSpecial : false;
        var statusLive = object.statusLive!=undefined ? object.statusLive : '';
        var manualStart = object.manualStart!=undefined ? object.manualStart : false;

        var now = new Date();




        var onairTypeSong;
        //debugger;
        /* Condition onair:*/
        var onAir = false;
        if(isSpecial){
            console.log("special");
            if(manualStart && statusLive=='live'){
                console.log("manual start --> live");
                onAir = true;
            }else if(manualStart!=true && (now.valueOf() >= inizioDate.valueOf() && now.valueOf() < fineDate.valueOf()) ){
                console.log("schedule start --> live");
                onAir = true;
            }
        } else if(now.valueOf() >= inizioDate.valueOf() && (isLiveForGSelector || now.valueOf() < fineDate.valueOf()) ){
            console.log("not special --> live");
            onAir = true;
        }

        if(onAir) {

            var source = object.source;

            var title = "", artist = "", guid = "", id = "";
            var programTitle = "";
            var programDescription = "";


            if (source != undefined && source == '1') {
                //zetta
                title = object.title;
                artist = object.artist;
                guid = object.eventGuid;
                id = object.eventId;
            } else {
                //GSel
                title = object.title;
                artist = object.artist;
                guid = object.guId;
                id = object.programId;
            }


            if (object.titleFromProgram != undefined) {
                programTitle = object.titleFromProgram;
                if (programTitle != undefined) {
                    //traduction from title
                    title = programTitle;
                }
            }

            if (object.descriptionFromProgram != undefined) {
                programDescription = object.descriptionFromProgram;
            }

            //case special translater
            if (object.translate != undefined && object.translate.title!=undefined) {
                translateTitle = object.translate.title;
                if (translateTitle != "") {
                    //title from translater
                    title = translateTitle;
                }
            }

            if (object.translate != undefined && object.translate.description!=undefined) {
                translateDescription = object.translate.description;
                if (translateDescription != "") {
                    //description from translater
                    programDescription = translateDescription;
                }
            }

            //patchr
            title = title.replace("(Diretta)","");


            var langProgram = language;
            var isInfoOpened = RCS_ONAIR.infoOpened === "onair###" + title;


            //return empty condition;
            if (title == undefined || inizio == undefined || fine == undefined) {
                return "";
            }

            var specialClass= ""
            if(isSpecial){
                var specialClass= "special"
            }

            html += "<div class='onair_container'>";
            html += '<div class="onair__main_info '+specialClass+'" data-eventId="' + id + '" data-eventGuid="' + guid + '" data-type="'+type+'">';

            var viewBar = "";
            if ($("#liveBars").attr("style") == "display: block;") {
                viewBar = "style=\"display: block;\"";
            }

            html += '<div id="liveBars" class="live__bar" ' + viewBar + '>';
            for (var i = 0; i < 22; i++) {
                html += "<div class='bar'></div>";
            }
            html += '</div>';

            html += "   <div class='onair__data'>" + RCS.pad(inizioDate.getHours(), 2) + ":" + RCS.pad(inizioDate.getMinutes(), 2) + "</div>";
            html += "   <div class='onair_data_separator'>-</div>";
            html += "   <div class='onair__data'>" + ( now.valueOf() > fineDate.valueOf() && ( statusLive=='live' || isLiveForGSelector) ? 'live' :  RCS.pad(fineDate.getHours(), 2) + ":" + RCS.pad(fineDate.getMinutes(), 2)) + "</div>";
            html += "   <div class='onair_titolo'>" + (title != undefined && title != "" ? title : '-') + "</div>";
            html += "   <div class='onair_tools'>";
            html += "       <div class='event_channels'></div>";
            html += "       <coral-icon class='onair_channel_icon listen listenIcon coral-Icon coral-Icon--volumeThree coral-Icon--sizeM' data-title='" + (title != undefined ? title.replace(/'/g, "&#39;") : '') + "' data-audio=\"" + RCS.getUrlAudioFromLanguage(language) + "\"  icon='volumeThree' size='M' role='img' data-bars='liveBars'></coral-icon>";
            html += "   </div>";
            html += "   <div class='onair_artist'>" + (artist != undefined && artist != "" ? artist : '') + "</div>";
            html += "</div>";

            if (programDescription != undefined && programDescription != "") {
                html += "<div class='onair_info_puntata infoDiv'>";
                html += "    <div class='onair__descrizione'>" + programDescription + "</div>";
                html += "</div>";
            }

            html += "</div>";

            if(html!=""){

                if(guid!=undefined && guid!=""){
                    RCS_ONAIR.currentOnAirGuID = guid;
                }

                if(type!=undefined && type!=""){
                    RCS_ONAIR.currentOnAirType = type;
                }

                if(title!=undefined && title!=""){
                    RCS_ONAIR.currentOnAirTitle = title;
                }

                if(artist!=undefined && artist!=""){
                    RCS_ONAIR.currentOnAirArtist = artist;
                }

                if(inizioDate!=undefined && fineDate!=undefined) {
                    RCS_ONAIR.currentOnAirStart = inizioDate;
                    RCS_ONAIR.currentOnAirEnd = fineDate;
                }

            }



        }

        return html;
    },


    buidDummyOnAirHtml: function(){
        //console.log("buidDummyOnAirHtml");
        //debugger;
        var html ="";
        var date = new Date();
        var orarioInizio = ('0' + date.getHours()).slice(-2) + ":" + ('0' + date.getMinutes()).slice(-2);
        date.setMinutes(date.getMinutes()+2);
        var orarioFine = ('0' + date.getHours()).slice(-2) + ":" + ('0' + date.getMinutes()).slice(-2);

        html += "<div class='onair_container'>";
        html += '<div class="onair__main_info" data-eventId="dummy" data-eventGuid="dummy">';

        var viewBar="";
        if($("#liveBars").attr("style") == "display: block;"){
            viewBar = "style=\"display: block;\"";
        }

        html += '<div id="liveBars" class="live__bar" '+viewBar+'>';
        for(var bars=0; bars<22; bars++){
            html += "<div class='bar'></div>";
        }
        html +="</div>";

        html += "   <div class='onair__data'>" + orarioInizio + "</div>";
        html += "   <div class='onair_data_separator'>-</div>";
        html += "   <div class='onair__data'>" + orarioFine + "</div>";
        html += "   <div class='onair_titolo'>" + RCS_ONAIR.dummyMusicLabel+"</div>";
        html += "   <div class='onair_tools'>";
        html += "       <div class='event_channels'></div>";
        html += "       <coral-icon class='onair_channel_icon listen listenIcon coral-Icon coral-Icon--volumeThree coral-Icon--sizeM' data-title='"+RCS_ONAIR.dummyMusicLabel+"' data-audio=\""+RCS.getUrlAudioFromLanguage(language)+"\"  icon='volumeThree' size='M' role='img' data-bars='liveBars'></coral-icon>";
        html += "   </div>";
        html += "   <div class='onair_artist'></div>";
        html += "</div>";


        html += "</div>";


        return html;

    },

    currentChannelWithEvents: [],


    buildEventiHTML: function(html, object, index){

        var inizio = Date.parse(object.Orainizio);
        var fine = Date.parse(object.Orafine);
        var inizioDate = new Date(inizio);
        var fineDate = new Date(fine);


        var utl = "";
        var audio = "";

        for (var p in object) {
            if (object.hasOwnProperty(p)) {
                if (p.startsWith("dtl_")) {
                    var utilizzatore = object[p];
                    utl += "<p>" + utilizzatore.Origine + "</p>";
                    utl += "<p>" + utilizzatore.InfoDiffusione + "</p>";

                    var channel = utilizzatore.IDUtl.toLowerCase().split("wli");

                    if (channel.length == 2) {
                        audio += "       <div class='event_channel'>";
                        audio += "			 <div class='radio__station'><span>CH" + RCS.padChannel(channel[1]) + "</span></div>";
                        audio += "			 <div class='info__diffusione'>" + utilizzatore.Origine + " - " + utilizzatore.InfoDiffusione + "</div>";
                        audio += "           <coral-icon class='event_channel_icon listen listenIcon coral-Icon' title='Ascolta' icon='volumeThree' size='M' data-bars='liveBars_" + index + "' data-audio='" + RCS.getEPGUrlAudioFromLanguage(utilizzatore.IDUtl) + "'></coral-icon>";
                        audio += "       </div>";
                        RCS_ONAIR.currentChannelWithEvents.push("CH" + RCS.padChannel(channel[1]));
                    }
                }
            }

        }

        var oraInizio = RCS.pad(inizioDate.getHours(), 2) + ":" + RCS.pad(inizioDate.getMinutes(), 2);
        var oraFine = RCS.pad(fineDate.getHours(), 2) + ":" + RCS.pad(fineDate.getMinutes(), 2);
        html += "<div class='event__container'>";

        var viewBar = "";
        if ($("#liveBars_" + index + "").attr("style") == "display: block;") {
            viewBar = "style=\"display: block;\"";
        }


        html += '<div id="liveBars_' + index + '" class="live__bar" ' + viewBar + '>';
        for (var bars = 0; bars < 22; bars++) {
            html += "<div class='bar'></div>";
        }
        html += "</div>" +

            "<div class='event__data__title'>" +
            "<div class='event__data'>" + AemUtils.formatDate(inizioDate, AemUtils.TEASER_DATE_FORMAT) + "</div>" +
            "<div class='event__title'>" + object.TitoloProgramma + "</div>" +
            "</div>" +
            "<div class='event__ora__description'>" +
            "<div class='event__ora'>" + oraInizio + " - " + oraFine + "</div>" +
            "<div class='event__description'>" + object.DescrizioneProgramma + "</div>" +
            "</div>" +
            "<div class='event_channels'>" +
            audio +
            "</div>" +
            "<div class='event_separator'></div>" +
            "</div>";

        return html;
    },


    getOnAir: function(){
        //console.log("getOnAir")
        var div = document.getElementById("onair_list");
        //var url = '/bin/rcs/getonair.dir/' + this.language + ".json";
        var url = '/bin/rcs/getonairscheduling.dir/' + this.language + ".json";
        var isValidResponse = RCS.isValidResponse(url);

        if (!isValidResponse){

            $.ajax({
                type: 'GET',
                url:url,
                success: function(data){

                    var html = "";

                    //todo case special
                    if(data.special !=undefined) {
                        console.log("special case");
                        var onAirSpecialEpisode = RCS_ONAIR.getEpisodeOnAir(data.special);

                        if (onAirSpecialEpisode!=undefined) {
                            html = RCS_ONAIR.buildPuntateHTML(html, onAirSpecialEpisode);
                        }
                    }


                    //case episodes
                    if((html==undefined || html=="") && data.episodes !=undefined) {
                        console.log("episode case");
                        var onAirEpisode = RCS_ONAIR.getEpisodeOnAir(data.episodes);

                        if (onAirEpisode!=undefined) {
                            html = RCS_ONAIR.buildPuntateHTML(html, onAirEpisode);
                        }
                    }

                    //case dummy
                    if(html==undefined || html==""){
                        html = RCS_ONAIR.buidDummyOnAirHtml();
                    }

                    //case epg events todo da dismettere dopo integrazione Speciali
                    /*if(data.events !=undefined) {
                        for (var j = 0; j < data.events.length; j++) {
                            html = RCS_ONAIR.buildEventiHTML(html, data.events[j],j);
                        }
                    }*/


                    div.innerHTML = html;
                    RCS.storeResponseTime(url);
                    RCS_ONAIR.init();
                    RCS_ONAIR.goToOnAirRow();

                }
            });
        }
    },


    getEpisodeOnAir: function(episodes){


        var onairTypeSong;
        var episodeOnAir;
        for (var esimo = 0; esimo < episodes.length; esimo++) {
            //console.log("episode: "+esimo);

            var episode = episodes[esimo];

            //todo se non serve aggionare le date inizio e fine rimuoviamo la gestione del real time
            var inizio = (episode.real_start_time!=undefined ? Date.parse(episode.real_start_time) :  Date.parse(episode.startDate) );
            var fine = (episode.real_end_time!=undefined ? Date.parse(episode.real_end_time) : Date.parse(episode.endDate) );


            var inizioDate = new Date(inizio);
            var fineDate = new Date(fine);

            var type = episode.rcsType;
            var isLiveForGSelector = episode.live; //todo usato per prolungamenti GSelector con nuova logica speciali potrebbe non servire più
            var now = new Date();

            var isSpecial = episode.isSpecial!=undefined ? episode.isSpecial : false;
            var statusLive = episode.statusLive!=undefined ? episode.statusLive : '';
            var manualStart = episode.manualStart!=undefined ? episode.manualStart : false;

            var onairTypeSong;
            //debugger;

            /* Condition onair:*/
            var onAir = false;
            var webradio = false;

            if (episode.translate != undefined && episode.translate.webradio==true) {
                webradio = true;
            }

            if(isSpecial) {
                console.log("special");

                if (webradio) {


                    if (manualStart && statusLive == 'live') {
                        console.log("manual start --> live");
                        onAir = true;
                    } else if (manualStart != true && (now.valueOf() >= inizioDate.valueOf() && now.valueOf() < fineDate.valueOf())) {
                        console.log("schedule start --> live");
                        onAir = true;
                    }
                }

            } else if(now.valueOf() >= inizioDate.valueOf() && (isLiveForGSelector || now.valueOf() < fineDate.valueOf()) ){
                console.log("not special --> live");
                onAir = true;
            }

            if(onAir) {
                //console.log("on-air or live exist")
                if(type!=undefined && (type=="Link" || type=="SpecificLink" || type=="CustomAsset") ){
                    //console.log("on-air or live trovato -->  type link");
                    episodeOnAir = episode;
                    break;
                }else{
                    //console.log("on-air type song trovato --> continue for check if exist type link");
                    episodeOnAir = episode;
                }
            }

        }

        return episodeOnAir;
    },

    hiddenContent: function(){
        $(".epg__container .multitab__list.palinsesto_container .onair_container").css("display","none");
    },


    goToOnAirRow(){
        //console.log("goto");
        if (RCS_ONAIR.goToOnAirRowTimeout) {
            clearTimeout(RCS_ONAIR.goToOnAirRowTimeout);
        }

        RCS_ONAIR.goToOnAirRowTimeout = setTimeout(function (){
            $('html, body').animate({
                scrollTop: ($(".onair_list").offset())
            }, 300);
        },300);
    },



}


RCS_SEARCH = {
    init: function(){
      $(".epg-search-label").on("click",function(){
          $(".epg-search-label.open").removeClass("open");
          var dataType = $(this).attr("data-search-type");
          RCS_SEARCH.main(dataType);
          $(this).addClass("open");
      });
      //$("#epgLanguageSelect").on("change",function(){$(".epg-search-label.open").click()});
    },
    main: function(searchType){
        try {
            var language = $("#epgLanguageSelect").val();
            if (language==="zh_tw" && VNTemplateUtils._currentLang==="zh_cn") language="zh_cn";
            if (language!=="") {
                if (searchType === "program")
                    RCS_SEARCH.searchProgram(language);
                else if (searchType === "podcast")
                    RCS_SEARCH.searchPodcast(language);
            }
        }
        catch(e){
            console.error("Error during client refresh RCS SEARCH: " + e.message);
        }
    },
    searchProgram: function(lang){
        RCS_REPLAY.main(lang,true,true);
    },
    searchPodcast: function(lang){
        RCS_REPLAY.main(lang,true);
    }
};
