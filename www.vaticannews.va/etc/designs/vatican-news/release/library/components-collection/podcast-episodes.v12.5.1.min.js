Episodes = {
    container: null,
    initialState: true,
    navigation: "",
    main: function(mainPath,language,container,orderBy,limit,epNavMode,layoutWithPlayer,playerStyle,unlinkPage,refactorPodTitle,thisProgramTitle,page){
        var actualPage=1;
        var offset=0;
        if (page!==undefined && !isNaN(parseInt(page))) {
            actualPage = parseInt(page);
            offset = (actualPage-1)*limit;
        }
        else
            window.location.hash="";
        if (isDispatcher) mainPath=getDispatcherPath(mainPath);
        var epNavString = "";
        if (((epNavMode==="ym"||epNavMode==="standard") && (Episodes.currentRange!==undefined && Episodes.currentRange!=="")) || (epNavMode==="day" && Episodes.currentDay===undefined))
            epNavString = ".year-month"+Episodes.currentRange;
        else if (epNavMode==="day" && Episodes.currentDay!==undefined && Episodes.currentDay!==""){
            epNavString = ".year-month-day."+Episodes.currentDay.replace(/\//g,"\.");
        }
        $.ajax({
            type: 'GET',
            dataType: 'json',
            url:mainPath+'.list'+epNavString+'.l:'+limit+'.o:'+offset+'.s:'+orderBy+(layoutWithPlayer ? '.lwp' : '') +'.js',
            success: function(json){
                Episodes.print(mainPath,language,container,json,orderBy,limit,epNavMode,layoutWithPlayer,playerStyle,unlinkPage,refactorPodTitle,thisProgramTitle,actualPage);
            }
        });
    },
    print: function(mainPath,language,container,json,orderBy,limit,epNavMode,layoutWithPlayer,playerStyle,unlinkPage,refactorPodTitle,thisProgramTitle,actualPage){
        var results = "";
        var rendition250x141 = "/_jcr_content/renditions/cq5dam.thumbnail.cropped.250.141";
        var rendition500x281 = "/_jcr_content/renditions/cq5dam.thumbnail.cropped.500.281";
        var rendition750x422 = "/_jcr_content/renditions/cq5dam.thumbnail.cropped.750.422";
        var templateResult = "" +
            "<div class='teaser--type-audio teaser'>" +
            "<article>" +
            "<div class='teaser__contentWrapper'>" +
            "<div class='teaser__podcast'>" +
            "<a href='{href}' title='{titleEncoded}'>" +
            "<figure class='teaser__image'>" +
            "{connotationHtml}" +
            "<picture>" +
            "<source media='(min-width: 768px)' data-original-set='/etc/designs/vatican-news/release/library/main/images/audio-overlay.750.422.png'>" +
            "<source media='(min-width: 340px)' data-original-set='/etc/designs/vatican-news/release/library/main/images/audio-overlay.500.281.png'>" +
            "<source data-original-set='/etc/designs/vatican-news/release/library/main/images/audio-overlay.250.141.png'>" +
            "<img data-original='/etc/designs/vatican-news/release/library/main/images/audio-overlay.250.141.png'>" +
            "</picture>" +
            "<noscript>" +
            "<img src='/etc/designs/vatican-news/release/library/main/images/audio-overlay.250.141.png'>" +
            "</noscript>" +
            "</figure>" +
            "</a>" +
            "</div>" +
            "<div class='teaser__info'>" +
            "<span>{date}</span>" + (unlinkPage ? "" :
                "<div class='vn_social_inline_share_toolbox' data-description='' data-title='{titleEncoded}' data-url='{url}' data-media='{urlMedia}'></div>") +
            "</div>" +
            "<h2 class='teaser__title'>" +
            "<a href='{href}' title='{titleEncoded}'>" +
            "<span>{title}</span>" +
            "</a>" +
            "</h2>" +
            "</div>" +
            "</article>" +
            "</div>";
        var templateResultWithImg = "" +
            "<div class='teaser--type-audio teaser audiooInside'>" +
            "<article>" +
            "<div class='teaser__contentWrapper'>" +
            "<div class='teaser__podcast'>" +
            "<a href='{href}' title='{titleEncoded}'>" +
            "<figure class='teaser__image'>" +
            "{connotationHtml}" +
            "{overlay-audio}" +
            "<picture>" +
            "<source media='(min-width: 768px)' data-original-set='{image750x422}'>" +
            "<source media='(min-width: 340px)' data-original-set='{image500x281}'>" +
            "<source data-original-set='{image250x141}'>" +
            "<img data-original='{image250x141}' alt='{imageTitle}' title='{imageTitle}'>" +
            "</picture>" +
            "</figure>" +
            "</a>" +
            "</div>" +
            "<div class='teaser__info'>" +
            "<span>{date}</span>" + (unlinkPage ? "" :
                "<div class='vn_social_inline_share_toolbox' data-description='' data-title='{titleEncoded}' data-url='{url}' data-media='{urlMedia}'></div>") +
            "</div>" +
            "<h2 class='teaser__title'>" +
            "<a href='{href}' title='{titleEncoded}'>" +
            "<span>{title}</span>" +
            "</a>" +
            "</h2>" +
            "</div>" +
            "</article>" +
            "</div>";
        var templateResultWithPlayer = "" +
            "<div class='teaser--type-audio teaser audio-player {playerStyle} loading player{indexAudio}'>" +
            "<article>" +
            "<div class='teaser__contentWrapper'>" +
            "<div class='audioPlayer___Wrapper'>" +
            '<audio id="player{indexAudio}" preload="metadata" controls>' +
            '<source src="{urlAudio}" type="audio/mp3">' +
            "</audio>" +
            "</div>" +
            "<div class='teaser__info'>" +
            "<span>{date}</span>" + (unlinkPage ? "" :
                "<div class='vn_social_inline_share_toolbox' data-description='' data-title='{titleEncoded}' data-url='{url}' data-media='{urlMedia}'></div>") +
            "</div>" +
            "<h2 class='teaser__title'>" +
            (!unlinkPage ? "<a href='{href}' title='{titleEncoded}'>" : "") +
            "<span>{title}</span>" +
            (!unlinkPage ? "</a>" : "") +
            "</h2>" +
            "</div>" +
            "</article>" +
            "</div>";

        var totalMatches = json.totalMatches;
        var totalPages = limit > 0 ? Math.ceil(totalMatches/limit) : 1;
        if (totalPages>0 && actualPage>totalPages) {
            actualPage = totalPages;
            window.location.hash="";
            Episodes.main(mainPath,language,container,orderBy,limit,epNavMode,layoutWithPlayer,playerStyle,unlinkPage,refactorPodTitle,thisProgramTitle,actualPage);
            return;
        }

        var length = Object.keys(json).length;
        if ((length===0 || (length===1 && json["totalMatches"]===0)) && container.find("> p.noElements").length===1)
            container.find("> p.noElements").css("display","block");
        else {
            moment.locale(language);
            var host = location.host;
            var connClass;
            for (var i = 0; i < length; i++) {
                var key = Object.keys(json)[i];
                if (key === "totalMatches") continue;
                var value = json[key];
                var urlAudio = value.urlAudio;
                var path = value.path;
                if (isDispatcher)
                    path = getDispatcherPath(path);
                var title = value.title;
                var image = value.previewMedia;
                var connotation = value.connotation;
                var connotationHtml = connotation!==undefined && connotation!=="" ? '<div class="ac-connotation connotazione-'+connotation+'">'+Search.i18n[connotation]+'</div>' : '';
                if (connotation!==undefined && connotation!=="" && !connotation.endsWith("-vnacNoLabel")) connClass=" hasConn";

                var overlayAudioInside = '<div class="overlay-audio"><span></span></div>';

                var thereIsImage = image && image!=="" && !image.startsWith("/etc/designs/");
                if (thereIsImage) {
                    image = (VNArchivedUtils.isArchivedAsset(image) ? VNArchivedUtils._archivedMediaDomain + image : image);
                    image = encodeURI(image).replace(/'/g, "&#39;");
                    if (!image.startsWith("http") || image.startsWith(VNArchivedUtils._archivedMediaDomain)) {
                        var extension = image.toLowerCase().endsWith(".png") ? ".png" : ".jpeg";
                        image += rendition250x141 + extension;
                        if (image.startsWith(VNArchivedUtils._archivedMediaDomain) && VNArchivedUtils.isCNDispatcher()) image = VNArchivedUtils.convertToArchivedAssetCN(image);
                    }
                }
                var imageTitle = value.previewAlt;
                if (!imageTitle) imageTitle="";
                var date = value.date;
                var result = "";
                if (layoutWithPlayer){
                    if (refactorPodTitle) title = thisProgramTitle + ((date !== undefined) && (moment(date).format("DD/MM/YYYY") !== "Invalid date") ? " " + AemUtils.formatDate(date.substring(0,10),"","YYYY-MM-DD").replace(/\//g,".") : "");
                    result = templateResultWithPlayer
                        .replace(new RegExp("{title}", 'g'), title)
                        .replace(new RegExp("{titleEncoded}", 'g'), title.replace(/'/g, "&#39;"))
                        .replace(new RegExp("{urlAudio}", 'g'), urlAudio)
                        .replace(new RegExp("{indexAudio}", 'g'), i+"")
                        .replace(new RegExp("{playerStyle}", 'g'), playerStyle)
                        .replace(new RegExp("{href}", 'g'), path + ".html")
                        .replace(new RegExp("{url}", 'g'), host + path + ".html")
                        .replace(new RegExp("{date}", 'g'), (date !== undefined) && (moment(date).format("DD/MM/YYYY") !== "Invalid date") ? AemUtils.formatDate(date.substring(0,10),"","YYYY-MM-DD") : "");
                }
                else if (thereIsImage){
                    result = templateResultWithImg
                        .replace(new RegExp("{title}", 'g'), title)
                        .replace(new RegExp("{titleEncoded}", 'g'), title.replace(/'/g, "&#39;"))
                        .replace(new RegExp("{href}", 'g'), path + ".html")
                        .replace(new RegExp("{url}", 'g'), host + path + ".html")
                        .replace(new RegExp("{urlMedia}", 'g'), (!image.startsWith("http") && image!=="" ? host : "") + image)
                        .replace(new RegExp("{image250x141}", 'g'), image)
                        .replace(new RegExp("{image500x281}", 'g'), image.replace(rendition250x141,rendition500x281))
                        .replace(new RegExp("{image750x422}", 'g'), image.replace(rendition250x141,rendition750x422))
                        .replace(new RegExp("{imageTitle}", 'g'), imageTitle)
                        .replace(new RegExp("{date}", 'g'), (date !== undefined) && (moment(date).format("DD/MM/YYYY") !== "Invalid date") ? AemUtils.formatDate(date.substring(0,10),"","YYYY-MM-DD") : "")
                        .replace(new RegExp("{connotationHtml}", 'g'), connotationHtml)
                        .replace(new RegExp("{overlay-audio}", 'g'), overlayAudioInside)
                        .replace(new RegExp("{connClass}", 'g'), connClass);
                }
                else {
                    result = templateResult
                        .replace(new RegExp("{title}", 'g'), title)
                        .replace(new RegExp("{titleEncoded}", 'g'), title.replace(/'/g, "&#39;"))
                        .replace(new RegExp("{href}", 'g'), path + ".html")
                        .replace(new RegExp("{url}", 'g'), host + path + ".html")
                        .replace(new RegExp("{urlMedia}", 'g'), host + '/etc/designs/vatican-news/release/library/main/images/audio-overlay.250.141.png')
                        .replace(new RegExp("{date}", 'g'), (date !== undefined) && (moment(date).format("DD/MM/YYYY") !== "Invalid date") ? AemUtils.formatDate(date.substring(0,10),"","YYYY-MM-DD") : "")
                        .replace(new RegExp("{connotationHtml}", 'g'), connotationHtml)
                        .replace(new RegExp("{connClass}", 'g'), connClass);
                }
                results+=result;
            }
            container.html(results);
            VNSocialShare.init();
            Search.initLazyLoad();

            if (layoutWithPlayer)
                TeaserAudioPlayers.main();

            var disableServerPagination = !Episodes.initialState;

            if (totalPages > 1) // Start pagination
                Search.pagination(disableServerPagination, container, actualPage, totalPages);

            this.checkScrolling(container);
        }
    },
    insidePage: function(mainPath,language,container,orderBy,limit,epNavMode,currentRange,podcastFilterDate,layoutWithPlayer,playerStyle,unlinkPage,refactorPodTitle,thisProgramTitle){
        Episodes.container = container;
        Episodes.navigation = epNavMode;
        let yearPodcast = $("#year-podcast");
        let monthPodcast = $("#month-podcast");
        let monthPodcastOpts = monthPodcast.find(" > option");
        if (layoutWithPlayer && container.find("> link[rel='stylesheet']").length===1)
            container.find("> link").appendTo(".content__inner.content__inner--hasSidebar");
        if (currentRange!=="") Episodes.currentRange = currentRange;
        if (isDispatcher) mainPath=getDispatcherPath(mainPath);
        if (epNavMode==="ym" || epNavMode==="standard"){
            $.ajax({
                type: 'GET',
                url: mainPath + ".year-months.js",
                dataType: 'json',
                success: function (json) {
                    for (var i = 1; i < Object.keys(json).length; i++) {
                        if (json[Object.keys(json)[i]]!==undefined){
                            var date = json[Object.keys(json)[i]].date.split("/");
                            var year = date[0];
                            var month = date[1];
                            if (Episodes.availableDates[year]===undefined){
                                Episodes.availableDates[year]=[];
                                yearPodcast.append("<option value='"+year+"'>"+year+"</option>")
                            }
                            Episodes.availableDates[year][month]="";
                        }
                    }

                    if (epNavMode==="ym") {

                        var index = 0, finded = 0;
                        var currentYear = yearPodcast.val();

                        monthPodcastOpts.each(function(){
                            index++;
                            if (Episodes.availableDates[currentYear][("0" + index).slice(-2)]===undefined)
                                $(this).attr("disabled","disabled");
                            else {
                                $(this).removeAttr("disabled");
                                finded=index-1;
                            }
                        });

                        monthPodcast.find(" > option[selected]").removeAttr("selected");

                        var ymToSelect = Episodes.currentRange.split("\.");
                        var yearToSelect = yearPodcast.find(" > option[value='" + ymToSelect[1] + "']");
                        var monthToSelect = monthPodcast.find(" > option[value='" + ymToSelect[2] + "']");
                        if (yearToSelect.length === 1 && monthToSelect.length === 1) {
                            yearToSelect[0].selected = true;
                            monthToSelect[0].selected = true;
                            finded = 0;
                        }
                        if (finded > 0) monthPodcast.find(" > option")[finded].selected = true;
                    }

                    var length = Object.keys(json).length;
                    if ((length===0 || (length===1 && json["totalMatches"]===0))){
                        if (container.find("> p.noElements").length===1) {
                            container.find("> p.noElements").css("display", "block");
                        }
                    } else {
                        monthPodcast.parent().parent().parent().removeClass("hidden");

                        yearPodcast.on("change",function(){
                            var index = 0, finded = 0;
                            var currentYear = yearPodcast.val();
                            monthPodcastOpts.each(function(){
                                index++;
                                if (Episodes.availableDates[currentYear][("0" + index).slice(-2)]===undefined)
                                    $(this).attr("disabled","disabled");
                                else {
                                    $(this).removeAttr("disabled");
                                    finded=index-1;
                                }
                            });
                            monthPodcast.find(" > option[selected]").removeAttr("selected");
                            if (finded>=0) {
                                monthPodcast.find(" > option")[finded].selected = true;
                                if (Episodes.navigation==="standard" && !Episodes.monthVisible) {
                                    monthPodcast.css("display","");
                                    if (!window.CSSBS_mobile) monthPodcast.parent().addClass("doubleArrow");
                                    else monthPodcast.parent().parent().css("display","");
                                    Episodes.monthVisible = true;
                                }
                                monthPodcast.trigger("change");
                            }
                            if (!Episodes.firstYearRemoved) {
                                Episodes.selectYearLabel = $("#year-podcast > option#selectYear").html();
                                Episodes.firstYearRemoved = true;
                                yearPodcast.find(" > option#selectYear").remove();
                            }
                        });

                        monthPodcast.on("change",function(){
                            Episodes.initialState=false;
                            Episodes.currentRange = "."+yearPodcast.val()+"."+monthPodcast.val();
                            if (Episodes.currentRange!=="..")
                                $(".selectPodcastRange div.clearDateFilter").removeClass("hidden");
                            Episodes.main(mainPath,language,container,orderBy,limit,epNavMode,layoutWithPlayer,playerStyle,unlinkPage,refactorPodTitle,thisProgramTitle);
                        });

                        $(".selectPodcastRange div.clearDateFilter").on("click",function(){
                            Episodes.currentRange = "";
                            Episodes.initialState = true;
                            $(".selectPodcastRange div.clearDateFilter").addClass("hidden");

                            if (Episodes.monthVisible) {
                                monthPodcast.css("display","none");
                                if (!window.CSSBS_mobile) monthPodcast.parent().removeClass("doubleArrow");
                                else monthPodcast.parent().parent().css("display","none");
                                Episodes.monthVisible = false;
                            }
                            if (Episodes.firstYearRemoved) {
                                yearPodcast.prepend('<option id="selectYear" selected disabled value="">'+Episodes.selectYearLabel+'</option>');
                                yearPodcast.parent().removeClass("doubleArrow");
                                Episodes.firstYearRemoved = false;
                            }
                            Episodes.main(mainPath,language,container,orderBy,limit,epNavMode,layoutWithPlayer,playerStyle,unlinkPage,refactorPodTitle,thisProgramTitle);
                        });

                        if (window.CSSBS_mobile) {
                            $(".selectPodcastRange").addClass("hidden");
                            $(".selectPodcastRange").append('<div><label class="formSelectContainer"></label></div>');
                            monthPodcast.appendTo(".selectPodcastRange > div:nth-child(2) > .formSelectContainer");
                            $(".selectPodcastRange > div:nth-child(1) > .doubleArrow").removeClass("doubleArrow");
                            $(".selectPodcastRange").removeClass("hidden");
                        }
                    }
                }, error: function () {},
                done: function() {}
            })
        }
        else if (epNavMode==="day" && (currentRange!=="" || podcastFilterDate!=="")) {
            var c = new Date();
            var dp = $("#dataFilter");
            if (podcastFilterDate !== "") {
                var month = podcastFilterDate.split("-")[1];
                var day = podcastFilterDate.split("-")[2].substring(0,2);
                var year = podcastFilterDate.split("-")[0];
                var data = new Date(year,month-1,day);
                dp.datepicker('setDate', data);
                dp.on("dpReady", function () {
                    $(this).unbind("dpReady");
                    $(this).datepicker('setDate', data);
                });
            }
            else if (("." + c.getFullYear + "." + (c.getMonth() + 1)) !== currentRange) {
                var dateToSelect = currentRange.substring(1).split(".");
                dateToSelect = ("0" + dateToSelect[1]).slice(-2) + "/01/" + dateToSelect[0];
                dp.datepicker('setDate', dateToSelect);
                dp.on("dpReady", function () {
                    $(this).unbind("dpReady");
                    $(this).datepicker('setDate', dateToSelect);
                });
            }
        }

        if (epNavMode!=="day") {

            $("a[data-pagination-href]").on("click", function (e) {
                e.preventDefault();
                e.stopPropagation();
                window.location.hash = $(this).attr("data-pagination-href");
            });

            $(window).on('hashchange', function () {
                var hash = location.hash;
                hash = (hash !== "" ? hash.replace("#", "") : "");
                if (!isNaN(parseInt(hash)))
                    Episodes.main(mainPath, language, container, orderBy, limit, epNavMode, layoutWithPlayer, playerStyle, unlinkPage, refactorPodTitle, thisProgramTitle, parseInt(hash));
            });

            var hash = location.hash;
            hash = (hash !== "" ? hash.replace("#", "") : "");
            if (!isNaN(parseInt(hash)))
                Episodes.main(mainPath, language, container, orderBy, limit, epNavMode, layoutWithPlayer, playerStyle, unlinkPage, refactorPodTitle, thisProgramTitle, parseInt(hash));

        }

        Episodes.container.on("selectedDay",function(){
            Episodes.initialState=false;
            Episodes.main(mainPath,language,container,orderBy,limit,epNavMode,layoutWithPlayer,playerStyle,unlinkPage,refactorPodTitle,thisProgramTitle);
        })
    },
    availableDates: [],
    firstMonthRemoved: false,
    firstYearRemoved: false,
    monthVisible: false,
    selectYearLabel: "",
    checkScrolling: function(container){
        var rightScroll = container.offset().top - $("header").height();
        if ($(window).scrollTop()>rightScroll || $(window).scrollTop()===0)
            $(window).scrollTop(rightScroll);
    }
};